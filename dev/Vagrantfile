# -*- mode: ruby -*-
# vi: set ft=ruby :

# Author: Stephen K
# Company: Cloud Initiatives Inc.

# Getting Started:
# 1. vagrant plugin install vagrant-hostmanager
# 2. Generate SSH Keys - ssh-keygen -t rsa -N "" -f $(pwd)/id_rsa
# 3. vagrant up
# 4. vagrant ssh  //Will connect you to MASTER or use vagrant ssh <servername>
# 5. Once connected to the master, you can ssh into any lab server using keys (without a password) with command: ssh vagrant@<serverhostname>
# 6. vagrant halt //Stops the lab and powers off VMs - Keeps all data
# 7. vagrant destroy -f ////Stops the lab and powers off VMs and DELETES ALL VMs - LOOSE ALL DATA
#############################################################################################################################################

# Global Definitions
CENTOS7 = "centos/7"
UBUNTU14 = "ubuntu/trusty64"
UBUNTU16 = "ubuntu/xenial64"
NETSUB = "10.7.100."
MASTERIP = NETSUB + "5"

# MASTER or BASTION Server Definitions (Also Primary Server for SSH)
MASTER_SERVER_CPU = 1
MASTER_SERVER_MEMORY = 1024
MASTER_SERVER_OS = CENTOS7
MASTER_SERVER_NAME = "master" 

# LOAD BALANCER Server Definitions
LB_SERVER_COUNT = 1
LB_SERVER_CPU = 1
LB_SERVER_MEMORY = 1024
LB_SERVER_OS = CENTOS7
LB_SERVER_NAME = "lb" # This name will be suffixed with a count number

# WEB Server Definitions
WEB_SERVER_COUNT = 1
WEB_SERVER_CPU = 1
WEB_SERVER_MEMORY = 512
WEB_SERVER_OS = CENTOS7
WEB_SERVER_NAME = "web" # This name will be suffixed with a count number

# APP Server Definitions
APP_SERVER_COUNT = 1
APP_SERVER_CPU = 1
APP_SERVER_MEMORY = 1024
APP_SERVER_OS = CENTOS7
APP_SERVER_NAME = "app" # This name will be suffixed with a count number

# DATABASE Server Definitions
DB_SERVER_COUNT = 1
DB_SERVER_CPU = 1
DB_SERVER_MEMORY = 1024
DB_SERVER_OS = CENTOS7
DB_SERVER_NAME = "db" # This name will be suffixed with a count number

# Scripts

# FUTURE USE
$SSHOWN = <<-SCRIPT
chown -R vagrant:vagrant /home/vagrant/.ssh/
SCRIPT

# FUTURE USE
$POST_SCRIPT_YUM = <<-SCRIPT
yum upgrade -y
rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
yum install gcc kernel-devel kernel-headers dkms make bzip2 perl wget vim ansible -y
echo "complete" >> /home/vagrant/postscript.txt
SCRIPT

# FUTURE USE
$POST_SCRIPT_APT = <<-SCRIPT
apt-get update
apt-get upgrade -y
echo "complete" >> /home/vagrant/postscript.txt
SCRIPT

Vagrant.configure("2") do |config|
  config.hostmanager.enabled = true
  config.ssh.forward_agent = true
  config.vm.define MASTER_SERVER_NAME + "1", primary: true do |subconfig|
    subconfig.vm.box = CENTOS7
    subconfig.vm.hostname = MASTER_SERVER_NAME + "1"
    subconfig.vm.network :private_network, ip: MASTERIP
    subconfig.vm.provision "file", source: "./id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa_vagrant"
    subconfig.vm.provision "file", source: "./id_rsa_vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa_vagrant.pub"
    subconfig.vm.provision "file", source: "./config", destination: "/home/vagrant/.ssh/config"
    subconfig.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa_vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
    subconfig.vm.provision "shell", inline: "chown -R vagrant:vagrant /home/vagrant/.ssh/"
    subconfig.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/config"
    subconfig.vm.provision "shell", inline: "eval $(ssh-agent)"
    subconfig.vm.provision "shell", inline: "ssh-add /home/vagrant/.ssh/id_rsa_vagrant"
    subconfig.vm.provider "virtualbox" do |resource|
      resource.cpus = MASTER_SERVER_CPU
      resource.memory = MASTER_SERVER_MEMORY
    end
  end
  
    (1..LB_SERVER_COUNT).each do |i|
      config.vm.define LB_SERVER_NAME + "#{i}" do |subconfig|
        subconfig.vm.box = LB_SERVER_OS
        subconfig.vm.hostname = LB_SERVER_NAME + "#{i}"
        subconfig.vm.network :private_network, ip: NETSUB + "#{i + 10}"
        subconfig.vm.provision "file", source: "./id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa_vagrant"
        subconfig.vm.provision "file", source: "./id_rsa_vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa_vagrant.pub"
        subconfig.vm.provision "file", source: "./config", destination: "/home/vagrant/.ssh/config"
        subconfig.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa_vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
        subconfig.vm.provision "shell", inline: "chown -R vagrant:vagrant /home/vagrant/.ssh/"
        subconfig.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/config"
        subconfig.vm.network :forwarded_port, guest: 80, host: 8080
        subconfig.vm.network :forwarded_port, guest: 443, host: 4343
        subconfig.vm.provider "virtualbox" do |lb|
          lb.cpus = LB_SERVER_CPU
          lb.memory = LB_SERVER_MEMORY
        end
      end
    end
    (1..WEB_SERVER_COUNT).each do |i|
      config.vm.define WEB_SERVER_NAME + "#{i}" do |subconfig|
        subconfig.vm.box = WEB_SERVER_OS
        subconfig.vm.hostname = WEB_SERVER_NAME + "#{i}"
        subconfig.vm.network :private_network, ip: NETSUB + "#{i + 20}"
        subconfig.vm.provision "file", source: "./id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa_vagrant"
        subconfig.vm.provision "file", source: "./id_rsa_vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa_vagrant.pub"
        subconfig.vm.provision "file", source: "./config", destination: "/home/vagrant/.ssh/config"
        subconfig.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa_vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
        subconfig.vm.provision "shell", inline: "chown -R vagrant:vagrant /home/vagrant/.ssh/"
        subconfig.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/config"
        #subconfig.vm.network :forwarded_port, guest: 80, host: 8080
        #subconfig.vm.network :forwarded_port, guest: 443, host: 4343
        subconfig.vm.provider "virtualbox" do |web|
          web.cpus = WEB_SERVER_CPU
          web.memory = WEB_SERVER_MEMORY
        end
      end
    end
    (1..APP_SERVER_COUNT).each do |i|
      config.vm.define APP_SERVER_NAME + "#{i}" do |subconfig|
        subconfig.vm.box = APP_SERVER_OS
        subconfig.vm.hostname = APP_SERVER_NAME + "#{i}"
        subconfig.vm.network :private_network, ip: NETSUB + "#{i + 30}"
        subconfig.vm.provision "file", source: "./id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa_vagrant"
        subconfig.vm.provision "file", source: "./id_rsa_vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa_vagrant.pub"
        subconfig.vm.provision "file", source: "./config", destination: "/home/vagrant/.ssh/config"
        subconfig.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa_vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
        subconfig.vm.provision "shell", inline: "chown -R vagrant:vagrant /home/vagrant/.ssh/"
        subconfig.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/config"
        #subconfig.vm.network :forwarded_port, guest: 80, host: 8080
        #subconfig.vm.network :forwarded_port, guest: 443, host: 4343
        subconfig.vm.provider "virtualbox" do |app|
          app.cpus = APP_SERVER_CPU
          app.memory = APP_SERVER_MEMORY
        end
      end
    end
    (1..DB_SERVER_COUNT).each do |i|
      config.vm.define DB_SERVER_NAME + "#{i}" do |subconfig|
        subconfig.vm.box = DB_SERVER_OS
        subconfig.vm.hostname = DB_SERVER_NAME + "#{i}"
        subconfig.vm.network :private_network, ip: NETSUB + "#{i + 40}"
        subconfig.vm.provision "file", source: "./id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa_vagrant"
        subconfig.vm.provision "file", source: "./id_rsa_vagrant.pub", destination: "/home/vagrant/.ssh/id_rsa_vagrant.pub"
        subconfig.vm.provision "file", source: "./config", destination: "/home/vagrant/.ssh/config"
        subconfig.vm.provision "shell", inline: "cat /home/vagrant/.ssh/id_rsa_vagrant.pub >> /home/vagrant/.ssh/authorized_keys"
        subconfig.vm.provision "shell", inline: "chown -R vagrant:vagrant /home/vagrant/.ssh/"
        subconfig.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/config"
        #subconfig.vm.network :forwarded_port, guest: 80, host: 8080
        #subconfig.vm.network :forwarded_port, guest: 443, host: 4343
        subconfig.vm.provider "virtualbox" do |db|
          db.cpus = DB_SERVER_CPU
          db.memory = DB_SERVER_MEMORY
        end
      end
    end
  
  # Install POSTS SCRIPTS on ALL Machines 
  config.vm.provision "shell", inline: $POST_SCRIPT_YUM
end
